version: '2.4'

services:
    postgres:
        image: postgres:11-alpine
        restart: on-failure
        environment:
            POSTGRES_USER: einstore
            POSTGRES_DB: einstore
        volumes:
            - pgsql-data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    adminer:
        image: adminer
        labels:
            - traefik.port=8080
    api:
        image: einstore/einstore-core:dev.master
        restart: on-failure
        environment:
            APICORE_STORAGE_LOCAL_ROOT: /home/einstore

            APICORE_SERVER_PATH_PREFIX: 'api'

            APICORE_DATABASE_HOST: postgres
            APICORE_DATABASE_USER: einstore
            APICORE_DATABASE_DATABASE: einstore
            APICORE_DATABASE_PORT: 5432
            APICORE_DATABASE_LOGGING: 'false'
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test: ["CMD-SHELL", "curl -q http://localhost:8080/$${APICORE_SERVER_PATH_PREFIX}/info"]
            interval: 5s
            timeout: 5s
            retries: 5
            start_period: 10s
        labels:
            - traefik.enable=true
            - traefik.port=8080
        volumes:
          - einstore-storage:/home/einstore

    admin:
        image: einstore/einstore-admin:dev.master
        restart: on-failure
        labels:
          - traefik.enable=true
          - traefik.port=80

    traefik:
        image: traefik:v1.7-alpine
        restart: on-failure
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./config/traefik.toml:/etc/traefik/traefik.toml:ro
          - acme-storage:/acme-storage

volumes:
    pgsql-data: ~
    acme-storage: ~
    einstore-storage: ~
